@page "/my-orders"
@using SharedLibrary
@using System.Security.Claims
@using Newtonsoft.Json
@layout CustomerLayout
@inject HttpClient httpClient
@inject AuthenticationStateProvider authProvider
@inject NavigationManager _navigationManager

@attribute [Authorize(Roles = "Customer")]
<PageTitle>My Orders</PageTitle>


<MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="true">
    <MudItem Class="d-flex justify-content-center" xs="12">
        <MudItem xs="8">
            <MudText Typo="Typo.h6" Class="text-start">My Orders</MudText>
            <MudTabs Elevation="2" Rounded="true" Centered="true" Class="my-6" Color="Color.Dark">
                <MudTabPanel Icon="@Icons.Material.Filled.ShoppingCart" Text="New Orders" BadgeData="@(newOrders.Count()>0?newOrders.Count():null)" BadgeColor="Color.Error">
                    <MudItem Class="d-flex justify-content-center" xs="12">
                        <MudItem xs="12">
                            <MudStack>
                                @if (newOrders.Count() == 0)
                                {
                                    <MudText Typo="Typo.h6">No Items to show.</MudText>
                                }
                                @foreach (var item in newOrders)
                                {

                                    <MudExpansionPanels MultiExpansion="true">
                                        <MudExpansionPanel Text="Panel One">
                                            <TitleContent>
                                                <div class="d-flex">
                                                    <MudStack Row Justify="Justify.Center" AlignItems="AlignItems.Center">
                                                        <MudIcon Icon="@Icons.Material.Filled.ShoppingCartCheckout" Size="Size.Large" Color="Color.Error" class="mr-3"></MudIcon>
                                                        <MudText>Store: <strong>@item.OrderItems.FirstOrDefault()?.StoreName</strong></MudText>
                                                    </MudStack>
                                                    <MudSpacer />
                                                    <MudStack Spacing="0">
                                                        <MudText>Order No. <strong>@item.OrderItems.FirstOrDefault()?.OrderId</strong></MudText>
                                                        <MudText>Total: <strong>₱@item.OrderItems.FirstOrDefault()?.Total</strong></MudText>
                                                    </MudStack>

                                                </div>
                                            </TitleContent>
                                            <ChildContent>
                                                <MudTimeline TimelineOrientation="TimelineOrientation.Horizontal" TimelinePosition="TimelinePosition.Alternate" Reverse="false">
                                                    <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.ShoppingCart" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Class="text-center" Color="Color.Success">Order Created</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Success">@item.Status.Where(s => s.Status == 1 && s.OrderId == item.OrderItems.FirstOrDefault()?.OrderId).Select(s => s.UpdatedOn).FirstOrDefault()</MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>
                                                    <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Schedule" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Color="Color.Dark" Class="text-center">Processing</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Dark">
                                                                
                                                            </MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>
                                                 
                                                    <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Moped" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Color="Color.Dark" Class="text-center">In-Transit</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Dark">
                                                             
                                                            </MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>
                                                  
                                                    <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.CheckCircle" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Color="Color.Dark" Class="text-center">Completed</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Dark">
                                                              
                                                            </MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>

                                                </MudTimeline>
                                                @foreach (var fooditem in item.OrderItems)
                                                {
                                                    <MudPaper Elevation="4" Class="py-5">
                                                        <MudStack Row Class="pa-3" AlignItems="AlignItems.Center">
                                                            <MudImage Src="@fooditem.ItemLogo" Width="80" Height="80" />
                                                            <MudSpacer />
                                                            <MudStack AlignItems="AlignItems.Start" Justify="Justify.FlexStart" Spacing="1">
                                                                <MudText Typo="Typo.body1"><strong>@fooditem.ItemName</strong></MudText>
                                                                <MudText Typo="Typo.body1"><strong>Category:</strong> @fooditem.Category</MudText>
                                                            </MudStack>
                                                            <MudSpacer />
                                                            <MudStack AlignItems="AlignItems.Center">
                                                                <MudText Typo="Typo.body1"><strong>Pcs:</strong> @fooditem.Pcs</MudText>
                                                                <MudText Typo="Typo.body1"><strong>₱@fooditem.Price</strong></MudText>
                                                            </MudStack>
                                                        </MudStack>
                                                    </MudPaper>
                                                }
                                                <MudButton FullWidth Variant="Variant.Filled" Color="Color.Error" OnClick="@(async () => OnCancelOrder(item.OrderItems.FirstOrDefault()?.OrderId))">Cancel Order</MudButton>
                                            </ChildContent>
                                        </MudExpansionPanel>
                                    </MudExpansionPanels>
                                }


                            </MudStack>
                        </MudItem>
                    </MudItem>
                </MudTabPanel>
                <MudTabPanel Icon="@Icons.Material.Filled.Schedule" Text="Preparing" BadgeData="@(processingOrders.Count()>0?processingOrders.Count():null)" BadgeColor="Color.Error">
                    <MudItem Class="d-flex justify-content-center" xs="12">
                        <MudItem xs="12">
                            <MudStack>
                                @if (processingOrders.Count() == 0)
                                {
                                    <MudText Typo="Typo.h6">No Items to show.</MudText>
                                }
                                @foreach (var item in processingOrders)
                                {
                                    <MudExpansionPanels MultiExpansion="true">
                                        <MudExpansionPanel Text="Panel One">
                                            <TitleContent>
                                                <div class="d-flex">
                                                    <MudStack Row Justify="Justify.Center" AlignItems="AlignItems.Center">
                                                        <MudIcon Icon="@Icons.Material.Filled.ShoppingCartCheckout" Size="Size.Large" Color="Color.Error" class="mr-3"></MudIcon>
                                                        <MudText>Store: <strong>@item.OrderItems.FirstOrDefault()?.StoreName</strong></MudText>
                                                    </MudStack>
                                                    <MudSpacer />
                                                    <MudStack Spacing="0">
                                                        <MudText>Order No. <strong>@item.OrderItems.FirstOrDefault()?.OrderId</strong></MudText>
                                                        <MudText>Total: <strong>₱@item.OrderItems.FirstOrDefault()?.Total</strong></MudText>
                                                    </MudStack>

                                                </div>
                                            </TitleContent>
                                            <ChildContent>
                                                <MudTimeline TimelineOrientation="TimelineOrientation.Horizontal" TimelinePosition="TimelinePosition.Alternate" Reverse="false">
                                                    <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.ShoppingCart" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Class="text-center" Color="Color.Success">Order Created</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Success"></MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>
                                                    
                                                    <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Schedule" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Color="Color.Success" Class="text-center">Processing</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Success">
                                                                @if (item.Status
                                                               .Any(s => s.Status == 2 && s.OrderId == item.OrderItems.FirstOrDefault()?.OrderId))
                                                                {
                                                                    @item.Status.Where(s => s.Status == 2 && s.OrderId == item.OrderItems.FirstOrDefault()?.OrderId).Select(s => s.UpdatedOn).DefaultIfEmpty().FirstOrDefault()
                                                                }
                                                            </MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>
                                                   
                                                    <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Moped" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Color="Color.Dark" Class="text-center">In-Transit</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Dark">
                                                                
                                                            </MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>
                                                    
                                                    <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.CheckCircle" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Color="Color.Dark" Class="text-center">Completed</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Dark">
                                                               
                                                            </MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>

                                                </MudTimeline>
                                                @foreach (var fooditem in item.OrderItems)
                                                {
                                                    <MudPaper Elevation="4" Class="py-5">
                                                        <MudStack Row Class="pa-3" AlignItems="AlignItems.Center">
                                                            <MudImage Src="@fooditem.ItemLogo" Width="80" Height="80" />
                                                            <MudSpacer />
                                                            <MudStack AlignItems="AlignItems.Start" Justify="Justify.FlexStart" Spacing="1">
                                                                <MudText Typo="Typo.body1"><strong>@fooditem.ItemName</strong></MudText>
                                                                <MudText Typo="Typo.body1"><strong>Category:</strong> @fooditem.Category</MudText>
                                                            </MudStack>
                                                            <MudSpacer />
                                                            <MudStack AlignItems="AlignItems.Center">
                                                                <MudText Typo="Typo.body1"><strong>Pcs:</strong> @fooditem.Pcs</MudText>
                                                                <MudText Typo="Typo.body1"><strong>₱@fooditem.Price</strong></MudText>
                                                            </MudStack>
                                                        </MudStack>
                                                    </MudPaper>
                                                }
                                            </ChildContent>
                                        </MudExpansionPanel>
                                    </MudExpansionPanels>
                                }


                            </MudStack>
                        </MudItem>
                    </MudItem>
                </MudTabPanel>
                <MudTabPanel Icon="@Icons.Material.Filled.Moped" Text="In-Transit" BadgeData="@(intransitOrders.Count()>0?intransitOrders.Count():null)" BadgeColor="Color.Error">
                    <MudItem Class="d-flex justify-content-center" xs="12">
                        <MudItem xs="12">
                            <MudStack>
                                @if (intransitOrders.Count() == 0)
                                {
                                    <MudText Typo="Typo.h6">No Items to show.</MudText>
                                }
                                @foreach (var item in intransitOrders)
                                {
                                    <MudExpansionPanels MultiExpansion="true">
                                        <MudExpansionPanel Text="Panel One">
                                            <TitleContent>
                                                <div class="d-flex">
                                                    <MudStack Row Justify="Justify.Center" AlignItems="AlignItems.Center">
                                                        <MudIcon Icon="@Icons.Material.Filled.ShoppingCartCheckout" Size="Size.Large" Color="Color.Error" class="mr-3"></MudIcon>
                                                        <MudText>Store: <strong>@item.OrderItems.FirstOrDefault()?.StoreName</strong></MudText>
                                                    </MudStack>
                                                    <MudSpacer />
                                                    <MudStack Spacing="0">
                                                        <MudText>Order No. <strong>@item.OrderItems.FirstOrDefault()?.OrderId</strong></MudText>
                                                        <MudText>Total: <strong>₱@item.OrderItems.FirstOrDefault()?.Total</strong></MudText>
                                                    </MudStack>

                                                </div>
                                            </TitleContent>
                                            <ChildContent>
                                                <MudTimeline TimelineOrientation="TimelineOrientation.Horizontal" TimelinePosition="TimelinePosition.Alternate" Reverse="false">
                                                    <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.ShoppingCart" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Class="text-center" Color="Color.Success">Order Created</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Success"></MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>
                                                   
                                                    <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Schedule" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Color="Color.Success" Class="text-center">Processing</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Success">
                                                               
                                                            </MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>
                                                   
                                                    <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Moped" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Color="Color.Success" Class="text-center">In-Transit</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Success">
                                                                @if (item.Status
                                                               .Where(s => s.Status == 3 && s.OrderId == item.OrderItems.FirstOrDefault()?.OrderId)
                                                               .Select(s => s.UpdatedOn)
                                                               .DefaultIfEmpty()
                                                               .FirstOrDefault() != DateTime.MinValue)
                                                                {
                                                                    @item.Status.Where(s => s.Status == 3 && s.OrderId == item.OrderItems.FirstOrDefault()?.OrderId).Select(s => s.UpdatedOn).DefaultIfEmpty().FirstOrDefault()
                                                                }
                                                            </MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>

                                                    
                                                    <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.CheckCircle" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Color="Color.Dark" Class="text-center">Completed</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Dark">
                                                               
                                                            </MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>

                                                </MudTimeline>
                                                @foreach (var fooditem in item.OrderItems)
                                                {
                                                    <MudPaper Elevation="4" Class="py-5">
                                                        <MudStack Row Class="pa-3" AlignItems="AlignItems.Center">
                                                            <MudImage Src="@fooditem.ItemLogo" Width="80" Height="80" />
                                                            <MudSpacer />
                                                            <MudStack AlignItems="AlignItems.Start" Justify="Justify.FlexStart" Spacing="1">
                                                                <MudText Typo="Typo.body1"><strong>@fooditem.ItemName</strong></MudText>
                                                                <MudText Typo="Typo.body1"><strong>Category:</strong> @fooditem.Category</MudText>
                                                            </MudStack>
                                                            <MudSpacer />
                                                            <MudStack AlignItems="AlignItems.Center">
                                                                <MudText Typo="Typo.body1"><strong>Pcs:</strong> @fooditem.Pcs</MudText>
                                                                <MudText Typo="Typo.body1"><strong>₱@fooditem.Price</strong></MudText>
                                                            </MudStack>
                                                        </MudStack>
                                                    </MudPaper>
                                                }
                                            </ChildContent>
                                        </MudExpansionPanel>
                                    </MudExpansionPanels>
                                }


                            </MudStack>
                        </MudItem>
                    </MudItem>
                </MudTabPanel>
                <MudTabPanel Icon="@Icons.Material.Filled.NoFood" Text="Cancelled" BadgeData="@(cancelledOrders.Count()>0?cancelledOrders.Count():null)" BadgeColor="Color.Error">
                    <MudItem Class="d-flex justify-content-center" xs="12">
                        <MudItem xs="12">
                            <MudStack>
                                @if (cancelledOrders.Count() == 0)
                                {
                                    <MudText Typo="Typo.h6">No Items to show.</MudText>
                                }
                                @foreach (var item in cancelledOrders)
                                {
                                    <MudExpansionPanels MultiExpansion="true">
                                        <MudExpansionPanel Text="Panel One">
                                            <TitleContent>
                                                <div class="d-flex">
                                                    <MudStack Row Justify="Justify.Center" AlignItems="AlignItems.Center">
                                                        <MudIcon Icon="@Icons.Material.Filled.ShoppingCartCheckout" Size="Size.Large" Color="Color.Error" class="mr-3"></MudIcon>
                                                        <MudText>Store: <strong>@item.OrderItems.FirstOrDefault()?.StoreName</strong></MudText>
                                                    </MudStack>
                                                    <MudSpacer />
                                                    <MudStack Spacing="0">
                                                        <MudText>Order No. <strong>@item.OrderItems.FirstOrDefault()?.OrderId</strong></MudText>
                                                        <MudText>Total: <strong>₱@item.OrderItems.FirstOrDefault()?.Total</strong></MudText>
                                                    </MudStack>

                                                </div>
                                            </TitleContent>
                                            <ChildContent>
                                                <MudTimeline TimelineOrientation="TimelineOrientation.Horizontal" TimelinePosition="TimelinePosition.Alternate" Reverse="false">
                                                    <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.ShoppingCart" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Class="text-center" Color="Color.Dark">Order Created</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Dark"></MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>




                                                    <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Schedule" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Color="Color.Dark" Class="text-center">Processing</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Dark">
                                                               
                                                            </MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>




                                                    <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Moped" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Color="Color.Dark" Class="text-center">In-Transit</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Dark">
                                                               
                                                            </MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>

                                                   
                                                        <MudTimelineItem Color="Color.Error" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                            <ItemDot>
                                                                <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.NoFood" />
                                                            </ItemDot>
                                                            <ItemContent>
                                                                <MudText Color="Color.Error" Class="text-center">Cancelled</MudText>
                                                            </ItemContent>
                                                            <ItemOpposite>
                                                                <MudText Color="Color.Error">@item.Status.Where(s => s.Status == 0 && s.OrderId == item.OrderItems.FirstOrDefault()?.OrderId).Select(s => s.UpdatedOn).DefaultIfEmpty().FirstOrDefault()</MudText>
                                                            </ItemOpposite>
                                                        </MudTimelineItem>
                                                    



                                                    <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.CheckCircle" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Color="Color.Dark" Class="text-center">Completed</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Dark">
                                                               
                                                            </MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>

                                                </MudTimeline>
                                                @foreach (var fooditem in item.OrderItems)
                                                {
                                                    <MudPaper Elevation="4" Class="py-5">
                                                        <MudStack Row Class="pa-3" AlignItems="AlignItems.Center">
                                                            <MudImage Src="@fooditem.ItemLogo" Width="80" Height="80" />
                                                            <MudSpacer />
                                                            <MudStack AlignItems="AlignItems.Start" Justify="Justify.FlexStart" Spacing="1">
                                                                <MudText Typo="Typo.body1"><strong>@fooditem.ItemName</strong></MudText>
                                                                <MudText Typo="Typo.body1"><strong>Category:</strong> @fooditem.Category</MudText>
                                                            </MudStack>
                                                            <MudSpacer />
                                                            <MudStack AlignItems="AlignItems.Center">
                                                                <MudText Typo="Typo.body1"><strong>Pcs:</strong> @fooditem.Pcs</MudText>
                                                                <MudText Typo="Typo.body1"><strong>₱@fooditem.Price</strong></MudText>
                                                            </MudStack>
                                                        </MudStack>
                                                    </MudPaper>
                                                }
                                            </ChildContent>
                                        </MudExpansionPanel>
                                    </MudExpansionPanels>
                                }


                            </MudStack>
                        </MudItem>
                    </MudItem>
                </MudTabPanel>
                <MudTabPanel Icon="@Icons.Material.Filled.CheckCircle" Text="Completed" BadgeData="@(completedOrders.Count()>0?completedOrders.Count():null)" BadgeColor="Color.Error">
                    <MudItem Class="d-flex justify-content-center" xs="12">
                        <MudItem xs="12">
                            <MudStack>
                                @if (completedOrders.Count() == 0)
                                {
                                    <MudText Typo="Typo.h6">No Items to show.</MudText>
                                }
                                @foreach (var item in completedOrders)
                                {
                                    <MudExpansionPanels MultiExpansion="true">
                                        <MudExpansionPanel Text="Panel One">
                                            <TitleContent>
                                                <div class="d-flex">
                                                    <MudStack Row Justify="Justify.Center" AlignItems="AlignItems.Center">
                                                        <MudIcon Icon="@Icons.Material.Filled.ShoppingCartCheckout" Size="Size.Large" Color="Color.Error" class="mr-3"></MudIcon>
                                                        <MudText>Store: <strong>@item.OrderItems.FirstOrDefault()?.StoreName</strong></MudText>
                                                    </MudStack>
                                                    <MudSpacer />
                                                    <MudStack Spacing="0">
                                                        <MudText>Order No. <strong>@item.OrderItems.FirstOrDefault()?.OrderId</strong></MudText>
                                                        <MudText>Total: <strong>₱@item.OrderItems.FirstOrDefault()?.Total</strong></MudText>
                                                    </MudStack>

                                                </div>
                                            </TitleContent>
                                            <ChildContent>
                                                <MudTimeline TimelineOrientation="TimelineOrientation.Horizontal" TimelinePosition="TimelinePosition.Alternate" Reverse="false">
                                                    <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.ShoppingCart" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Class="text-center" Color="Color.Success">Order Created</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Success"></MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>
                                                   
                                                    <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Schedule" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Color="Color.Success" Class="text-center">Processing</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Success">
                                                                
                                                            </MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>
                                                 
                                                    <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Moped" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Color="Color.Success" Class="text-center">In-Transit</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Success">
                                                                
                                                            </MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>

                                                   
                                                    <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.CheckCircle" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Color="Color.Success" Class="text-center">Completed</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Success">
                                                                @if (item.Status
                                                               .Where(s => s.Status == 4 && s.OrderId == item.OrderItems.FirstOrDefault()?.OrderId)
                                                               .Select(s => s.UpdatedOn)
                                                               .DefaultIfEmpty()
                                                               .FirstOrDefault() != DateTime.MinValue)
                                                                {
                                                                    @item.Status.Where(s => s.Status == 4 && s.OrderId == item.OrderItems.FirstOrDefault()?.OrderId).Select(s => s.UpdatedOn).DefaultIfEmpty().FirstOrDefault()
                                                                }
                                                            </MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>

                                                </MudTimeline>
                                                @foreach (var fooditem in item.OrderItems)
                                                {
                                                    <MudPaper Elevation="4" Class="py-5">
                                                        <MudStack Row Class="pa-3" AlignItems="AlignItems.Center">
                                                            <MudImage Src="@fooditem.ItemLogo" Width="80" Height="80" />
                                                            <MudSpacer />
                                                            <MudStack AlignItems="AlignItems.Start" Justify="Justify.FlexStart" Spacing="1">
                                                                <MudText Typo="Typo.body1"><strong>@fooditem.ItemName</strong></MudText>
                                                                <MudText Typo="Typo.body1"><strong>Category:</strong> @fooditem.Category</MudText>
                                                            </MudStack>
                                                            <MudSpacer />
                                                            <MudStack AlignItems="AlignItems.Center" Spacing="0">
                                                                <MudText Typo="Typo.body1"><strong>Pcs:</strong> @fooditem.Pcs</MudText>
                                                                <MudText Typo="Typo.body1"><strong>₱@fooditem.Price</strong></MudText>
                                                                <MudRating SelectedValue="@fooditem.Rating"
                                                                           ReadOnly="@(fooditem.Rating == 0 ? false : true)"
                                                                           SelectedValueChanged="@((int newValue) => SaveRatings(fooditem, newValue,emailaddress))" />


                                                            </MudStack>
                                                        </MudStack>
                                                    </MudPaper>
                                                }
                                            </ChildContent>
                                        </MudExpansionPanel>
                                    </MudExpansionPanels>
                                }


                            </MudStack>
                        </MudItem>
                    </MudItem>
                </MudTabPanel>
            </MudTabs>
        </MudItem>

    </MudItem>
</MudHidden>

<MudHidden Breakpoint="Breakpoint.MdAndDown" Invert="true">
    <MudItem Class="d-flex justify-content-center" xs="12">
    <MudItem xs="12">
        <MudText Typo="Typo.h6" Class="text-start">My Orders</MudText>
            <MudTabs Elevation="2" Rounded="true" Centered="true" Class="my-6" MinimumTabWidth="80px" Color="Color.Dark">
            <MudTabPanel Icon="@Icons.Material.Filled.ShoppingCart" BadgeData="@(newOrders.Count()>0?newOrders.Count():null)" BadgeColor="Color.Error">
                <MudItem Class="d-flex justify-content-center" xs="12">
                    <MudItem xs="12">
                        <MudStack>
                            <MudText Typo="Typo.h6" Class="fw-bold py-2">
                                New Orders
                            </MudText>
                            @if(newOrders.Count() == 0)
                            {
                                <MudText Typo="Typo.h6">No Items to show.</MudText>
                            }
                            @foreach (var item in newOrders)
                            {
                                
                                <MudExpansionPanels MultiExpansion="true">
                                    <MudExpansionPanel Text="Panel One">
                                        <TitleContent>
                                            <div class="d-flex">
                                                <MudStack Justify="Justify.Center" AlignItems="AlignItems.Start" Spacing="0">
                                                    <MudIcon Icon="@Icons.Material.Filled.ShoppingCartCheckout" Size="Size.Medium" Color="Color.Error" class="mr-3"></MudIcon>
                                                    <MudText>Store: <strong>@item.OrderItems.FirstOrDefault()?.StoreName</strong></MudText>                                                
                                                    <MudText Typo="Typo.body1">Order No. <strong>@item.OrderItems.FirstOrDefault()?.OrderId</strong></MudText>
                                                    <MudText Typo="Typo.body1">Total: <strong>₱@item.OrderItems.FirstOrDefault()?.Total</strong></MudText>
                                                </MudStack>

                                            </div>
                                        </TitleContent>
                                        <ChildContent>
                                            <MudTimeline TimelineOrientation="TimelineOrientation.Vertical" TimelinePosition="TimelinePosition.Alternate" Reverse="false">
                                                <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.ShoppingCart" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                        <MudText Class="text-center" Color="Color.Success">Order Created</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>
                                                        <MudText Color="Color.Success">@item.Status.Where(s => s.Status == 1 && s.OrderId == item.OrderItems.FirstOrDefault()?.OrderId).Select(s => s.UpdatedOn).FirstOrDefault()</MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>
                                               
                                                <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Schedule" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                        <MudText Color="Color.Dark" Class="text-center">Processing</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>
                                                        <MudText Color="Color.Dark">
                                                           
                                                        </MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>
                                              
                                                <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Moped" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                        <MudText Color="Color.Dark" Class="text-center">In-Transit</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>
                                                        <MudText Color="Color.Dark">
                                                           
                                                        </MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>

                                             
                                                <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.CheckCircle" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                        <MudText Color="Color.Dark" Class="text-center">Completed</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>
                                                        <MudText Color="Color.Dark">
                                                           
                                                        </MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>
                                            </MudTimeline>
                                            @foreach (var fooditem in item.OrderItems)
                                            {
                                                <MudPaper Elevation="4" Class="py-5">
                                                    <MudStack Row Class="pa-3" AlignItems="AlignItems.Center">
                                                        <MudImage Src="@fooditem.ItemLogo" Width="80" Height="80" />
                                                        <MudSpacer />
                                                        <MudStack AlignItems="AlignItems.Start" Justify="Justify.FlexStart" Spacing="1">
                                                            <MudText Typo="Typo.body1"><strong>@fooditem.ItemName</strong></MudText>
                                                            <MudText Typo="Typo.body1"><strong>Category:</strong> @fooditem.Category</MudText>
                                                        </MudStack>
                                                        <MudSpacer />
                                                        <MudStack AlignItems="AlignItems.Center">
                                                            <MudText Typo="Typo.body1"><strong>Pcs:</strong> @fooditem.Pcs</MudText>
                                                            <MudText Typo="Typo.body1"><strong>₱@fooditem.Price</strong></MudText>
                                                        </MudStack>
                                                    </MudStack>
                                                </MudPaper>
                                            }
                                            <MudButton FullWidth Variant="Variant.Filled" Color="Color.Error" OnClick="@(async () => OnCancelOrder(item.OrderItems.FirstOrDefault()?.OrderId))">Cancel Order</MudButton>
                                        </ChildContent>
                                    </MudExpansionPanel>
                                </MudExpansionPanels>
                            }


                        </MudStack>
                    </MudItem>
                </MudItem>
            </MudTabPanel>
            <MudTabPanel Icon="@Icons.Material.Filled.Schedule" BadgeData="@(processingOrders.Count()>0?processingOrders.Count():null)" BadgeColor="Color.Error">
                <MudItem Class="d-flex justify-content-center" xs="12">
                    <MudItem xs="12">
                        <MudStack>
                            <MudText Typo="Typo.h6" Class="fw-bold">
                                Preparing
                            </MudText>
                            @if(processingOrders.Count() == 0)
                            {
                                <MudText Typo="Typo.h6">No Items to show.</MudText>
                            }
                            @foreach (var item in processingOrders)
                            {
                                <MudExpansionPanels MultiExpansion="true">
                                    <MudExpansionPanel Text="Panel One">
                                        <TitleContent>
                                                <div class="d-flex">
                                                    <MudStack Justify="Justify.Center" AlignItems="AlignItems.Start" Spacing="0">
                                                        <MudIcon Icon="@Icons.Material.Filled.ShoppingCartCheckout" Size="Size.Medium" Color="Color.Error" class="mr-3"></MudIcon>
                                                        <MudText>Store: <strong>@item.OrderItems.FirstOrDefault()?.StoreName</strong></MudText>
                                                        <MudText Typo="Typo.body1">Order No. <strong>@item.OrderItems.FirstOrDefault()?.OrderId</strong></MudText>
                                                        <MudText Typo="Typo.body1">Total: <strong>₱@item.OrderItems.FirstOrDefault()?.Total</strong></MudText>
                                                    </MudStack>

                                                </div>
                                        </TitleContent>
                                        <ChildContent>
                                            <MudTimeline TimelineOrientation="TimelineOrientation.Vertical" TimelinePosition="TimelinePosition.Alternate" Reverse="false">
                                                <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.ShoppingCart" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                        <MudText Class="text-center" Color="Color.Success">Order Created</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>                                                        
                                                        <MudText Color="Color.Success"></MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>
                                               
                                                <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Schedule" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                        <MudText Color="Color.Success" Class="text-center">Processing</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>
                                                            <MudText Color="Color.Success">
                                                            @if (item.Status
                                                           .Any(s => s.Status == 2 && s.OrderId == item.OrderItems.FirstOrDefault()?.OrderId))
                                                            {
                                                                @item.Status.Where(s => s.Status == 2 && s.OrderId == item.OrderItems.FirstOrDefault()?.OrderId).Select(s => s.UpdatedOn).DefaultIfEmpty().FirstOrDefault()
                                                            }
                                                        </MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>
                                               
                                                <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Moped" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                            <MudText Color="Color.Dark" Class="text-center">In-Transit</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>
                                                        <MudText Color="Color.Dark">
                                                           
                                                        </MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>

                                               
                                                <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.CheckCircle" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                        <MudText Color="Color.Dark" Class="text-center">Completed</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>
                                                        <MudText Color="Color.Dark">                                                          
                                                        </MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>

                                            </MudTimeline>
                                            @foreach (var fooditem in item.OrderItems)
                                            {
                                                <MudPaper Elevation="4" Class="py-5">
                                                    <MudStack Row Class="pa-3" AlignItems="AlignItems.Center">
                                                        <MudImage Src="@fooditem.ItemLogo" Width="80" Height="80" />
                                                        <MudSpacer />
                                                        <MudStack AlignItems="AlignItems.Start" Justify="Justify.FlexStart" Spacing="1">
                                                            <MudText Typo="Typo.body1"><strong>@fooditem.ItemName</strong></MudText>
                                                            <MudText Typo="Typo.body1"><strong>Category:</strong> @fooditem.Category</MudText>
                                                        </MudStack>
                                                        <MudSpacer />
                                                        <MudStack AlignItems="AlignItems.Center">
                                                            <MudText Typo="Typo.body1"><strong>Pcs:</strong> @fooditem.Pcs</MudText>
                                                            <MudText Typo="Typo.body1"><strong>₱@fooditem.Price</strong></MudText>
                                                        </MudStack>
                                                    </MudStack>
                                                </MudPaper>
                                            }
                                        </ChildContent>
                                    </MudExpansionPanel>
                                </MudExpansionPanels>
                            }


                        </MudStack>
                    </MudItem>
                </MudItem>
            </MudTabPanel>
            <MudTabPanel Icon="@Icons.Material.Filled.Moped" BadgeData="@(intransitOrders.Count()>0?intransitOrders.Count():null)" BadgeColor="Color.Error">
                <MudItem Class="d-flex justify-content-center" xs="12">
                    <MudItem xs="12">
                        <MudStack>
                            <MudText Typo="Typo.h6" Class="fw-bold">
                                In-Transit
                            </MudText>
                            @if (intransitOrders.Count() == 0)
                            {
                                <MudText Typo="Typo.h6">No Items to show.</MudText>
                            }
                            @foreach (var item in intransitOrders)
                            {
                                <MudExpansionPanels MultiExpansion="true">
                                    <MudExpansionPanel Text="Panel One">
                                        <TitleContent>
                                             <div class="d-flex">
                                                <MudStack Justify="Justify.Center" AlignItems="AlignItems.Start" Spacing="0">
                                                    <MudIcon Icon="@Icons.Material.Filled.ShoppingCartCheckout" Size="Size.Medium" Color="Color.Error" class="mr-3"></MudIcon>
                                                    <MudText>Store: <strong>@item.OrderItems.FirstOrDefault()?.StoreName</strong></MudText>                                                
                                                    <MudText Typo="Typo.body1">Order No. <strong>@item.OrderItems.FirstOrDefault()?.OrderId</strong></MudText>
                                                    <MudText Typo="Typo.body1">Total: <strong>₱@item.OrderItems.FirstOrDefault()?.Total</strong></MudText>
                                                </MudStack>

                                            </div>
                                        </TitleContent>
                                        <ChildContent>
                                            <MudTimeline TimelineOrientation="TimelineOrientation.Vertical" TimelinePosition="TimelinePosition.Alternate" Reverse="false">
                                                <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.ShoppingCart" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                        <MudText Class="text-center" Color="Color.Success">Order Created</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>
                                                        <MudText Color="Color.Success"></MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>
                                              
                                                <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Schedule" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                        <MudText Color="Color.Success" Class="text-center">Processing</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>
                                                        <MudText Color="Color.Success">
                                                           
                                                        </MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>
                                               
                                                <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Moped" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                        <MudText Color="Color.Success" Class="text-center">In-Transit</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>
                                                        <MudText Color="Color.Success">
                                                            @if (item.Status
                                                           .Where(s => s.Status == 3 && s.OrderId == item.OrderItems.FirstOrDefault()?.OrderId)
                                                           .Select(s => s.UpdatedOn)
                                                           .DefaultIfEmpty()
                                                           .FirstOrDefault() != DateTime.MinValue)
                                                            {
                                                                @item.Status.Where(s => s.Status == 3 && s.OrderId == item.OrderItems.FirstOrDefault()?.OrderId).Select(s => s.UpdatedOn).DefaultIfEmpty().FirstOrDefault()
                                                            }
                                                        </MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>

                                               
                                               
                                                    <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.CheckCircle" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                        <MudText Color="Color.Dark" Class="text-center">Completed</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>
                                                        <MudText Color="Color.Dark">
                                                           
                                                        </MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>

                                            </MudTimeline>
                                            @foreach (var fooditem in item.OrderItems)
                                            {
                                                <MudPaper Elevation="4" Class="py-5">
                                                    <MudStack Row Class="pa-3" AlignItems="AlignItems.Center">
                                                        <MudImage Src="@fooditem.ItemLogo" Width="80" Height="80" />
                                                        <MudSpacer />
                                                        <MudStack AlignItems="AlignItems.Start" Justify="Justify.FlexStart" Spacing="1">
                                                            <MudText Typo="Typo.body1"><strong>@fooditem.ItemName</strong></MudText>
                                                            <MudText Typo="Typo.body1"><strong>Category:</strong> @fooditem.Category</MudText>
                                                        </MudStack>
                                                        <MudSpacer />
                                                        <MudStack AlignItems="AlignItems.Center">
                                                            <MudText Typo="Typo.body1"><strong>Pcs:</strong> @fooditem.Pcs</MudText>
                                                            <MudText Typo="Typo.body1"><strong>₱@fooditem.Price</strong></MudText>
                                                        </MudStack>
                                                    </MudStack>
                                                </MudPaper>
                                            }
                                        </ChildContent>
                                    </MudExpansionPanel>
                                </MudExpansionPanels>
                            }


                        </MudStack>
                    </MudItem>
                </MudItem>
            </MudTabPanel>
            <MudTabPanel Icon="@Icons.Material.Filled.NoFood"  BadgeData="@(cancelledOrders.Count()>0?cancelledOrders.Count():null)" BadgeColor="Color.Error">
                <MudItem Class="d-flex justify-content-center" xs="12">
                    <MudItem xs="12">
                        <MudStack>
                            <MudText Typo="Typo.h6" Class="fw-bold">
                                Cancelled
                            </MudText>
                            @if (cancelledOrders.Count() == 0)
                            {
                                <MudText Typo="Typo.h6">No Items to show.</MudText>
                            }
                            @foreach (var item in cancelledOrders)
                            {
                                <MudExpansionPanels MultiExpansion="true">
                                    <MudExpansionPanel Text="Panel One">
                                        <TitleContent>
                                                <div class="d-flex">
                                                    <MudStack Justify="Justify.Center" AlignItems="AlignItems.Start" Spacing="0">
                                                        <MudIcon Icon="@Icons.Material.Filled.ShoppingCartCheckout" Size="Size.Medium" Color="Color.Error" class="mr-3"></MudIcon>
                                                        <MudText>Store: <strong>@item.OrderItems.FirstOrDefault()?.StoreName</strong></MudText>
                                                        <MudText Typo="Typo.body1">Order No. <strong>@item.OrderItems.FirstOrDefault()?.OrderId</strong></MudText>
                                                        <MudText Typo="Typo.body1">Total: <strong>₱@item.OrderItems.FirstOrDefault()?.Total</strong></MudText>
                                                    </MudStack>

                                                </div>
                                        </TitleContent>
                                        <ChildContent>
                                            <MudTimeline TimelineOrientation="TimelineOrientation.Vertical" TimelinePosition="TimelinePosition.Alternate" Reverse="false">
                                                <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.ShoppingCart" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                        <MudText Class="text-center" Color="Color.Dark">Order Created</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>
                                                        <MudText Color="Color.Dark"></MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>
                                                
                                                   

                                                
                                                <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Schedule" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                        <MudText Color="Color.Dark" Class="text-center">Processing</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>
                                                        <MudText Color="Color.Dark">                                                           
                                                        </MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>
                                                
                                                    

                                                
                                                <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Moped" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                        <MudText Color="Color.Dark" Class="text-center">In-Transit</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>
                                                        <MudText Color="Color.Dark">
                                                           
                                                        </MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>

                                              
                                                    <MudTimelineItem Color="Color.Error" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                        <ItemDot>
                                                            <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.NoFood" />
                                                        </ItemDot>
                                                        <ItemContent>
                                                            <MudText Color="Color.Error" Class="text-center">Cancelled</MudText>
                                                        </ItemContent>
                                                        <ItemOpposite>
                                                            <MudText Color="Color.Error">@item.Status.Where(s => s.Status == 0 && s.OrderId == item.OrderItems.FirstOrDefault()?.OrderId).Select(s => s.UpdatedOn).DefaultIfEmpty().FirstOrDefault()</MudText>
                                                        </ItemOpposite>
                                                    </MudTimelineItem>
                                                
                                                
                                               
                                                
                                                <MudTimelineItem Color="Color.Dark" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.CheckCircle" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                        <MudText Color="Color.Dark" Class="text-center">Completed</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>
                                                        <MudText Color="Color.Dark">
                                                            
                                                        </MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>

                                            </MudTimeline>
                                            @foreach (var fooditem in item.OrderItems)
                                            {
                                                <MudPaper Elevation="4" Class="py-5">
                                                    <MudStack Row Class="pa-3" AlignItems="AlignItems.Center">
                                                        <MudImage Src="@fooditem.ItemLogo" Width="80" Height="80" />
                                                        <MudSpacer />
                                                        <MudStack AlignItems="AlignItems.Start" Justify="Justify.FlexStart" Spacing="1">
                                                            <MudText Typo="Typo.body1"><strong>@fooditem.ItemName</strong></MudText>
                                                            <MudText Typo="Typo.body1"><strong>Category:</strong> @fooditem.Category</MudText>
                                                        </MudStack>
                                                        <MudSpacer />
                                                        <MudStack AlignItems="AlignItems.Center">
                                                            <MudText Typo="Typo.body1"><strong>Pcs:</strong> @fooditem.Pcs</MudText>
                                                            <MudText Typo="Typo.body1"><strong>₱@fooditem.Price</strong></MudText>
                                                        </MudStack>
                                                    </MudStack>
                                                </MudPaper>
                                            }
                                        </ChildContent>
                                    </MudExpansionPanel>
                                </MudExpansionPanels>
                            }


                        </MudStack>
                    </MudItem>
                </MudItem>
            </MudTabPanel>
            <MudTabPanel Icon="@Icons.Material.Filled.CheckCircle" BadgeData="@(completedOrders.Count()>0?completedOrders.Count():null)" BadgeColor="Color.Error">
                <MudItem Class="d-flex justify-content-center" xs="12">
                    <MudItem xs="12">
                        <MudStack>
                            <MudText Typo="Typo.h6" Class="fw-bold">
                                Completed
                            </MudText>
                            @if(completedOrders.Count() == 0)
                            {
                                <MudText Typo="Typo.h6">No Items to show.</MudText>
                            }
                            @foreach (var item in completedOrders)
                            {
                                <MudExpansionPanels MultiExpansion="true">
                                    <MudExpansionPanel Text="Panel One">
                                        <TitleContent>
                                                <div class="d-flex">
                                                    <MudStack Justify="Justify.Center" AlignItems="AlignItems.Start" Spacing="0">
                                                        <MudIcon Icon="@Icons.Material.Filled.ShoppingCartCheckout" Size="Size.Medium" Color="Color.Error" class="mr-3"></MudIcon>
                                                        <MudText>Store: <strong>@item.OrderItems.FirstOrDefault()?.StoreName</strong></MudText>
                                                        <MudText Typo="Typo.body1">Order No. <strong>@item.OrderItems.FirstOrDefault()?.OrderId</strong></MudText>
                                                        <MudText Typo="Typo.body1">Total: <strong>₱@item.OrderItems.FirstOrDefault()?.Total</strong></MudText>
                                                    </MudStack>

                                                </div>
                                        </TitleContent>
                                        <ChildContent>
                                                <MudTimeline TimelineOrientation="TimelineOrientation.Vertical" TimelinePosition="TimelinePosition.Alternate" Reverse="false">
                                                <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.ShoppingCart" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                        <MudText Class="text-center" Color="Color.Success">Order Created</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>
                                                        <MudText Color="Color.Success"></MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>
                                                
                                                <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Schedule" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                        <MudText Color="Color.Success" Class="text-center">Processing</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>
                                                        <MudText Color="Color.Success">
                                                            
                                                        </MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>
                                               
                                                <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.Moped" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                        <MudText Color="Color.Success" Class="text-center">In-Transit</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>
                                                        <MudText Color="Color.Success">
                                                           
                                                        </MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>

                                                
                                                <MudTimelineItem Color="Color.Success" HideDot="false" Size="Size.Medium" Variant="Variant.Filled">
                                                    <ItemDot>
                                                        <MudIcon Size="Size.Medium" Icon="@Icons.Material.Filled.CheckCircle" />
                                                    </ItemDot>
                                                    <ItemContent>
                                                        <MudText Color="Color.Success" Class="text-center">Completed</MudText>
                                                    </ItemContent>
                                                    <ItemOpposite>
                                                            <MudText Color="Color.Success">
                                                            @if (item.Status
                                                           .Where(s => s.Status == 4 && s.OrderId == item.OrderItems.FirstOrDefault()?.OrderId)
                                                           .Select(s => s.UpdatedOn)
                                                           .DefaultIfEmpty()
                                                           .FirstOrDefault() != DateTime.MinValue)
                                                            {
                                                                @item.Status.Where(s => s.Status == 4 && s.OrderId == item.OrderItems.FirstOrDefault()?.OrderId).Select(s => s.UpdatedOn).DefaultIfEmpty().FirstOrDefault()
                                                            }
                                                        </MudText>
                                                    </ItemOpposite>
                                                </MudTimelineItem>

                                            </MudTimeline>
                                            @foreach (var fooditem in item.OrderItems)
                                            {
                                                <MudPaper Elevation="4" Class="py-5">
                                                    <MudStack Row Class="pa-3" AlignItems="AlignItems.Center">
                                                        <MudImage Src="@fooditem.ItemLogo" Width="80" Height="80" />
                                                        <MudSpacer />
                                                        <MudStack AlignItems="AlignItems.Start" Justify="Justify.FlexStart" Spacing="1">
                                                            <MudText Typo="Typo.body1"><strong>@fooditem.ItemName</strong></MudText>
                                                            <MudText Typo="Typo.body1"><strong>Category:</strong> @fooditem.Category</MudText>
                                                        </MudStack>
                                                        <MudSpacer />
                                                        <MudStack AlignItems="AlignItems.Center">
                                                            <MudText Typo="Typo.body1"><strong>Pcs:</strong> @fooditem.Pcs</MudText>
                                                            <MudText Typo="Typo.body1"><strong>₱@fooditem.Price</strong></MudText>
                                                        </MudStack>
                                                    </MudStack>
                                                        <MudRating SelectedValue="@fooditem.Rating"
                                                                   ReadOnly="@(fooditem.Rating == 0 ? false : true)"
                                                                   SelectedValueChanged="@((int newValue) => SaveRatings(fooditem, newValue,emailaddress))" />

                                                </MudPaper>
                                            }
                                                
                                        </ChildContent>
                                    </MudExpansionPanel>
                                </MudExpansionPanels>
                            }


                        </MudStack>
                    </MudItem>
                </MudItem>
            </MudTabPanel>
        </MudTabs>
    </MudItem>
    
</MudItem>
</MudHidden>



@code {
    private string emailaddress { get; set; }
    private List<Claim> UserClaims { get; set; } = new List<Claim>();
    private List<OrderJson> orderJson = new List<OrderJson>();
    private List<OrderDisplay> orders { get; set; } = new List<OrderDisplay>();
    private List<OrderDisplay> newOrders { get; set; } = new List<OrderDisplay>();
    private List<OrderDisplay> processingOrders { get; set; } = new List<OrderDisplay>();
    private List<OrderDisplay> intransitOrders { get; set; } = new List<OrderDisplay>();
    private List<OrderDisplay> cancelledOrders { get; set; } = new List<OrderDisplay>();
    private List<OrderDisplay> completedOrders { get; set; } = new List<OrderDisplay>();
    private Color color2,color3,color4;
    protected override async Task OnInitializedAsync()
    {
        var auth = await authProvider.GetAuthenticationStateAsync();
        var user = auth.User;
        if (user.Identity != null && user.Identity.IsAuthenticated)
        {
            UserClaims = user.Claims.ToList();
            foreach (var item in UserClaims)
            {
                if (item.Type.Contains("emailaddress"))
                {
                    emailaddress = item.Value;
                }
            }
            await OnGetOrders(emailaddress);

        }
        await base.OnInitializedAsync();

    }

    private async Task SaveRatings(OrderItem foodItem, int val, string email)
    {
        try
        {
            foodItem.Rating = val; 
            var userid = await httpClient.GetStringAsync($"UserManagement/getuserid?email={email}");

            var data = new UpdateRatings
            {
                ItemId = foodItem.ItemId,
                OrderId = foodItem.OrderId,
                Rate = val,
                UserId = userid
            };
            var response = await httpClient.PostAsJsonAsync($"FoodItem/updateRatings", data);

            if (response.IsSuccessStatusCode)
            {
                // await OnGetCartItems(emailaddress);
                Snackbar.Add($"Ratings Submitted", Severity.Success);
                
            }
            else
            {

                var errorMessage = await response.Content.ReadAsStringAsync();
                Console.WriteLine(errorMessage);
                Snackbar.Add($"An exception occurred:{errorMessage}", Severity.Error);

            }

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
            Snackbar.Add($"An exception occurred:{ex.Message}", Severity.Error);

        }
    }

    private async Task OnGetOrders(string emailaddress)
    {
        try
        {
            var ordersJson = await httpClient.GetFromJsonAsync<List<OrderJson>>($"OrderManagement/getcustomerorderswithcompleted?emailaddress={emailaddress}");

            foreach (var item in ordersJson)
            {
                var orderItems = JsonConvert.DeserializeObject<List<OrderItem>>(item.Item);
                var statuses = JsonConvert.DeserializeObject<List<StatusEntry>>(item.Status);

                // Create an OrderDisplay object and set its properties
                var orderDisplay = new OrderDisplay
                    {
                        OrderItems = orderItems,
                        Status = statuses
                    };

                orders.Add(orderDisplay);

            }
            newOrders = orders.Where(x => x.Status.LastOrDefault()?.Status == 1).ToList();
            processingOrders = orders.Where(x => x.Status.LastOrDefault()?.Status == 2 || x.Status.LastOrDefault()?.Status == 5 ).ToList();
            intransitOrders = orders.Where(x => x.Status.LastOrDefault()?.Status == 3).ToList();
            cancelledOrders = orders.Where(x => x.Status.LastOrDefault()?.Status == 0).ToList();
            completedOrders = orders.Where(x => x.Status.LastOrDefault()?.Status == 4).ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    private async Task OnCancelOrder(string orderId)
    {
        try
        {
            var response = await httpClient.PostAsJsonAsync($"OrderManagement/itemforcancel", orderId);

            if (response.IsSuccessStatusCode)
            {
                // await OnGetCartItems(emailaddress);
                Snackbar.Add($"Order Cancelled :{orderId}", Severity.Success);
                await Task.Delay(1000);
                _navigationManager.Refresh();
            }
            else
            {

                var errorMessage = await response.Content.ReadAsStringAsync();
                Console.WriteLine(errorMessage);
                Snackbar.Add($"An exception occurred:{errorMessage}", Severity.Error);

            }

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
            Snackbar.Add($"An exception occurred:{ex.Message}", Severity.Error);

        }
    }



}
