@page "/accounting-dashboard"
@attribute [Authorize(Roles = "Accounting")]
<PageTitle>Accounting Dashboard</PageTitle>
<MudItem xs="12">
    <MudItem>
        <MudBreadcrumbs Items="_items" Class="pointer-events-none"></MudBreadcrumbs>
    </MudItem>
    <MudItem>
        <div>
            <MudChart ChartType="ChartType.Line" ChartSeries="@Series" @bind-SelectedIndex="Index" XAxisLabels="@XAxisLabels" Width="100%" Height="350px" ChartOptions="@Options" />
        </div>
        <div>
            <MudChart ChartType="ChartType.Line" ChartSeries="@Series1" @bind-SelectedIndex="Index" XAxisLabels="@XAxisLabels" Width="100%" Height="350px" ChartOptions="@Options" />
        </div>
    </MudItem>
</MudItem>

@code {
    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Accounting", href: "#", icon: Icons.Material.Filled.AccountCircle),
        new BreadcrumbItem("Dashboard", href: "#", icon: Icons.Material.Filled.Dashboard)
    };

    private int Index = -1; //default value cannot be 0 -> first selectedindex is 0.
    public ChartOptions Options = new ChartOptions();

    public List<ChartSeries> Series = new List<ChartSeries>()
    {
        new ChartSeries() { Name = "Cash Flow for the week", Data = new double[] { 40, 20, 25, 27, 46, 60, 48 } },             
    };

    public List<ChartSeries> Series1 = new List<ChartSeries>()
    {
        new ChartSeries() { Name = "Revenue for the week", Data = new double[] { 40, 20, 25, 27, 46, 60, 48 } },
    };
    public string[] XAxisLabels;

    protected override Task OnInitializedAsync()
    {
        Options.LineStrokeWidth = 8;
        XAxisLabels = GetWeekDatesAsString(DateTime.Today);
        return base.OnInitializedAsync();
    }


    private static string[] GetWeekDatesAsString(DateTime startDate)
    {
        string[] weekDates = new string[7];

        // Find the previous Sunday
        DateTime sunday = startDate.AddDays(-(int)startDate.DayOfWeek);

        // Fill the array with dates for the entire week starting from Sunday
        for (int i = 0; i < 7; i++)
        {
            weekDates[i] = sunday.AddDays(i).ToString("yyyy-MM-dd");
        }

        return weekDates;
    }


}

